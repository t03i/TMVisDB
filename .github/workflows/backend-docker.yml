name: Docker Build and Push to ghcr.io

on:
    push:
        branches: ["main"]
        paths:
            - "backend/**"

jobs:
    build-push-deploy:
        runs-on: ubuntu-latest
        environment: production
        env:
            BACKEND_IMAGE: ${{ vars.REGISTRY }}/${{ vars.BACKEND_IMAGE_NAME }}
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ vars.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.BACKEND_IMAGE }}
                  tags: |
                      type=ref,event=branch
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}.{{minor}}.{{patch}}
                      type=raw,value=latest

            - name: Go Build Cache for Docker
              uses: actions/cache@v4
              with:
                  path: uv-cache
                  key: ${{ runner.os }}-uv-cache-${{ hashFiles('backend/uv.lock') }}

            - name: inject cache into docker
              uses: reproducible-containers/buildkit-cache-dance@v3.1.0
              with:
                  cache-map: |
                      {
                       "uv-cache": "/root/.cache/uv"
                       }
                  skip-extraction: ${{ steps.cache.outputs.cache-hit }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./backend.Dockerfile
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
