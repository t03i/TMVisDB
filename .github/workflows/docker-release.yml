on:
    workflow_call:
        inputs:
            tag:
                required: true
                type: string

jobs:


    release:
        runs-on: ubuntu-latest
        environment: production
        env:
            FRONTEND_IMAGE: ${{ vars.REGISTRY }}/${{ vars.FRONTEND_IMAGE_NAME }}
            BACKEND_IMAGE: ${{ vars.REGISTRY }}/${{ vars.BACKEND_IMAGE_NAME }}

        steps:
            - name: Login to Docker Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ vars.REGISTRY }}
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Extract Frontend metadata
              id: meta-frontend
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.FRONTEND_IMAGE }}
                tags: |
                    type=semver,pattern={{version}},value=${{ inputs.tag }}
                    type=semver,pattern={{major}}.{{minor}},value=${{ inputs.tag }}
                    type=semver,pattern={{major}},value=${{ inputs.tag }}
                    type=raw,value=latest

            - name: Retag and Push Frontend Image
              run: |
                docker pull ${{ env.FRONTEND_IMAGE }}:main-dev
                for tag in ${{ steps.meta-frontend.outputs.tags }}; do
                  docker tag ${{ env.FRONTEND_IMAGE }}:main-dev $tag
                  docker push $tag
                done

            - name: Extract Backend metadata
              id: meta-backend
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.BACKEND_IMAGE }}
                tags: |
                    type=semver,pattern={{version}},value=${{ inputs.tag }}
                    type=semver,pattern={{major}}.{{minor}},value=${{ inputs.tag }}
                    type=semver,pattern={{major}},value=${{ inputs.tag }}
                    type=raw,value=latest

            - name: Retag and Push Backend Image
              run: |
                docker pull ${{ env.BACKEND_IMAGE }}:main
                for tag in ${{ steps.meta-backend.outputs.tags }}; do
                  docker tag ${{ env.BACKEND_IMAGE }}:main $tag
                  docker push $tag
                done
