name: Frontend Controller

on:
    push:
        paths:
            - "frontend/**"
        branches: ["main"]

jobs:
    check-changes:
        runs-on: ubuntu-latest
        outputs:
            needs_docker_build: ${{ steps.check.outputs.docker_build }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 2

            - name: Check for package changes
              id: check
              run: |
                  DOCKER_BUILD="false"
                  if git diff --name-only HEAD^ HEAD | grep -q "frontend/\(package.json\|pnpm-lock.yaml\)"; then
                    DOCKER_BUILD="true"
                  fi
                  echo "docker_build=${DOCKER_BUILD}" >> "$GITHUB_OUTPUT"

    trigger-workflows:
        needs: check-changes
        runs-on: ubuntu-latest
        steps:
            - name: Trigger Docker build if needed
              if: true || needs.check-changes.outputs.needs_docker_build == 'true'
              uses: peter-evans/repository-dispatch@v3
              with:
                  event-type: build-docker-image
                  token: ${{ secrets.GITHUB_TOKEN }}

    build-and-deploy:
        needs: [check-changes]
        runs-on: ubuntu-latest
        environment: production
        env:
            FRONTEND_IMAGE: ${{ vars.REGISTRY }}/${{ vars.FRONTEND_IMAGE_NAME }}
        permissions:
            contents: read
            deployments: write
            packages: read
        steps:
            - uses: actions/checkout@v4

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build in Docker
              run: |
                  docker pull ${{ env.FRONTEND_IMAGE }}:latest-dev
                  docker run --rm \
                  -v ${{ github.workspace }}/frontend:/app \
                  ${{ env.FRONTEND_IMAGE }}:latest-dev \
                  pnpm run build

            - name: Publish to Cloudflare Pages
              uses: cloudflare/pages-action@v1
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  projectName: tmvisdb
                  directory: frontend/.svelte-kit/cloudflare
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}
