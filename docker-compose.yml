services:

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - traefik-public
      - default
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SENTRY_DSN=${SENTRY_DSN}
      - SQLITE_DATABASE_PATH=${SQLITE_DATABASE_PATH}
    volumes:
      - ./backend/data:/data:ro
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64 
    develop:
      watch:
        - action: sync
          path: backend/app/
          target: /app
          ignore:
            - backend/venv/
        - action: rebuild
          path: backend/pyproject.toml
      cmd: fastapi dev "--host", "0.0.0.0", "main.py"

  # frontend:
  #   image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
  #   restart: always
  #   networks:
  #     - traefik-public
  #     - default
  #   build:
  #     context: ./frontend
  #     args:
  #       - VITE_API_URL=https://${DOMAIN?Variable not set}
  #       - NODE_ENV=production
  #   labels:
  #     - traefik.enable=true
  #     - traefik.docker.network=traefik-public
  #     - traefik.constraint-label=traefik-public

  #     - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80

  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=http

  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le

  #     # Enable www redirection for HTTP and HTTPS
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.middlewares=${STACK_NAME?Variable not set}-www-redirect
  #     - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect,${STACK_NAME?Variable not set}-www-redirect

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true